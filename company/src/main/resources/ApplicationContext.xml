<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 将通知类放入spring容器中-->
    <bean id="mayAdvice" class="com.it.aop.MayAdvice"/>
    <bean id="bookDao" class="com.it.dao.BookDao" scope="prototype"
          init-method="init" destroy-method="destroy">
    </bean>

    <!--set 注入-->
    <bean id="bookService" class="com.it.service.BookService">
        <!-- name-ref/name-ref-bean/name-bean-class -->
        <property name="bookMapper" ref="bookDao"/>
    </bean>

    <!--构造函数-->
    <bean id="cardDao" class="com.it.dao.CardDao"/>
    <bean id="cardService" class="com.it.service.CardService">
        <constructor-arg name="cardMapper" ref="cardDao"/>
    </bean>

    <!--自动注入-->

    <bean id="adminDao" class="com.it.dao.AdminDao"/>
    <!--<bean id="adminDao1" class="com.it.dao.AdminDao1"/>-->

    <!--<bean id="adminService" class="com.it.service.AdminService" autowire="byType"/>-->

    <bean id="adminService" class="com.it.service.AdminService" >
        <property name="adminMapper" ref="adminDao"/>
    </bean>
        <!--constructor 先byName 后根据byType-->

    <!-- p / context/ tx/aop-->
    <!--开启基于注解的Bean管理和DI 7.1-->
    <context:component-scan base-package="com.it"/>
    <!--开启基于注解的AOP-->
    <aop:aspectj-autoproxy/>




</beans>